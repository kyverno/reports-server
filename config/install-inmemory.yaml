---
apiVersion: v1
kind: Namespace
metadata:
  name: reports-server
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: reports-server
  namespace: reports-server
  labels:
    helm.sh/chart: reports-server-0.1.0-alpha.1
    app.kubernetes.io/name: reports-server
    app.kubernetes.io/instance: reports-server
    app.kubernetes.io/version: "v0.1.0-alpha.1"
    app.kubernetes.io/managed-by: Helm
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: reports-server
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: 'true'
    rbac.authorization.k8s.io/aggregate-to-edit: 'true'
    rbac.authorization.k8s.io/aggregate-to-view: 'true'
    helm.sh/chart: reports-server-0.1.0-alpha.1
    app.kubernetes.io/name: reports-server
    app.kubernetes.io/instance: reports-server
    app.kubernetes.io/version: "v0.1.0-alpha.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
    - reports.kyverno.io
  resources:
    - ephemeralreports
    - clusterephemeralreports
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
    - deletecollection
- apiGroups:
    - wgpolicyk8s.io
  resources:
    - policyreports
    - policyreports/status
    - clusterpolicyreports
    - clusterpolicyreports/status
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
    - deletecollection
- apiGroups:
    - ''
    - events.k8s.io
  resources:
    - events
  verbs:
    - create
    - patch
- apiGroups:
    - authorization.k8s.io
  resources:
    - subjectaccessreviews
  verbs:
    - create
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: reports-server
  labels:
    helm.sh/chart: reports-server-0.1.0-alpha.1
    app.kubernetes.io/name: reports-server
    app.kubernetes.io/instance: reports-server
    app.kubernetes.io/version: "v0.1.0-alpha.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: reports-server
subjects:
- kind: ServiceAccount
  name: reports-server
  namespace: reports-server
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: reports-server
  namespace: kube-system
  labels:
    helm.sh/chart: reports-server-0.1.0-alpha.1
    app.kubernetes.io/name: reports-server
    app.kubernetes.io/instance: reports-server
    app.kubernetes.io/version: "v0.1.0-alpha.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: reports-server
  namespace: reports-server
---
apiVersion: v1
kind: Service
metadata:
  name: reports-server
  namespace: reports-server
  labels:
    helm.sh/chart: reports-server-0.1.0-alpha.1
    app.kubernetes.io/name: reports-server
    app.kubernetes.io/instance: reports-server
    app.kubernetes.io/version: "v0.1.0-alpha.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/name: reports-server
    app.kubernetes.io/instance: reports-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reports-server
  namespace: reports-server
  labels:
    helm.sh/chart: reports-server-0.1.0-alpha.1
    app.kubernetes.io/name: reports-server
    app.kubernetes.io/instance: reports-server
    app.kubernetes.io/version: "v0.1.0-alpha.1"
    app.kubernetes.io/managed-by: Helm
spec:
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: reports-server
      app.kubernetes.io/instance: reports-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: reports-server
        app.kubernetes.io/instance: reports-server
    spec:
      priorityClassName: system-cluster-critical
      serviceAccountName: reports-server
      securityContext:
        fsGroup: 2000
      containers:
        - name: reports-server
          args:
            - --debug
            - --cert-dir=/tmp
            - --secure-port=4443
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          image: "ghcr.io/kyverno/reports-server:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: https
              containerPort: 4443
              protocol: TCP
          volumeMounts:
            - mountPath: /tmp
              name: tmp-dir
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            initialDelaySeconds: 90
            periodSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 100
            periodSeconds: 10
          resources:
            limits: null
            requests: null
      volumes:
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha2.wgpolicyk8s.io
  namespace: reports-server
  labels:
    helm.sh/chart: reports-server-0.1.0-alpha.1
    app.kubernetes.io/name: reports-server
    app.kubernetes.io/instance: reports-server
    app.kubernetes.io/version: "v0.1.0-alpha.1"
    app.kubernetes.io/managed-by: Helm
    kube-aggregator.kubernetes.io/automanaged: "false"
spec:
  group: wgpolicyk8s.io
  groupPriorityMinimum: 100
  insecureSkipTLSVerify: true
  service:
    name: reports-server
    namespace: reports-server
  version: v1alpha2
  versionPriority: 100
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1.reports.kyverno.io
  namespace: reports-server
  labels:
    helm.sh/chart: reports-server-0.1.0-alpha.1
    app.kubernetes.io/name: reports-server
    app.kubernetes.io/instance: reports-server
    app.kubernetes.io/version: "v0.1.0-alpha.1"
    app.kubernetes.io/managed-by: Helm
    kube-aggregator.kubernetes.io/automanaged: "false"
spec:
  group: reports.kyverno.io
  groupPriorityMinimum: 100
  insecureSkipTLSVerify: true
  service:
    name: reports-server
    namespace: reports-server
  version: v1
  versionPriority: 100
