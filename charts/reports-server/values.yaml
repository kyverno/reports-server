# -- Internal settings used with `helm template` to generate install manifest
# @ignored
templating:
  enabled: false

postgresql:

  # -- Deploy postgresql dependency chart
  enabled: true

  auth:

    postgresPassword: reports

    database: reportsdb

apiServices:

  # -- Store reports in reports-server
  enabled: true

  # -- Store ephemeral reports in reports-server
  installEphemeralReportsService: true

# -- Name override
nameOverride: ""

# -- Full name override
fullnameOverride: ""

# -- Number of pod replicas
replicaCount: 1

image:
  # -- Image registry
  registry: ghcr.io
  # -- Image repository
  repository: kyverno/reports-server
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Image tag (will default to app version if not set)
  tag: ~

# -- Image pull secrets
imagePullSecrets: []

# -- Priority class name
priorityClassName: system-cluster-critical

serviceAccount:
  # -- Create service account
  create: true

  # -- Service account annotations
  annotations: {}

  # -- Service account name (required if `serviceAccount.create` is `false`)
  name: ""

# -- Pod annotations
podAnnotations: {}

# -- Pod security context
podSecurityContext:
  fsGroup: 2000

# -- Container security context
# @default -- See [values.yaml](values.yaml)
securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  privileged: false
  allowPrivilegeEscalation: false
  seccompProfile:
    type: RuntimeDefault

# -- Liveness probe
livenessProbe:
  failureThreshold: 3
  initialDelaySeconds: 90
  periodSeconds: 10
  httpGet:
    path: /livez
    port: https
    scheme: HTTPS

# -- Readiness probe
readinessProbe:
  initialDelaySeconds: 100
  failureThreshold: 3
  periodSeconds: 10
  httpGet:
    path: /readyz
    port: https
    scheme: HTTPS

metrics:
  # -- Enable prometheus metrics
  enabled: true

  serviceMonitor:
    # -- Enable service monitor for scraping prometheus metrics
    enabled: true

    # -- Service monitor additional labels
    additionalLabels: {}

    # -- Service monitor scrape interval
    interval: ""

    # -- Service monitor metric relabelings
    metricRelabelings: []

    # -- Service monitor relabelings
    relabelings: []

    # -- Service monitor scrape timeout
    scrapeTimeout: ""

# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
resources:
  # -- Container resource limits
  limits:
    # cpu: 100m
    # memory: 128Mi

  # -- Container resource requests
  requests:
    # cpu: 100m
    # memory: 128Mi

autoscaling:
  # -- Enable autoscaling
  enabled: false

  # -- Min number of replicas
  minReplicas: 1

  # -- Max number of replicas
  maxReplicas: 100

  # -- Target CPU utilisation
  targetCPUUtilizationPercentage: 80

  # -- Target Memory utilisation
  targetMemoryUtilizationPercentage: ~

# -- Node selector
nodeSelector: {}

# -- Tolerations
tolerations: []

# -- Affinity
affinity: {}

service:
  # -- Service type
  type: ClusterIP

  # -- Service port
  port: 443

config:

  # -- Enable debug (to use inmemorydatabase)
  debug: false

  db:
    # -- If set, database connection information will be read from the Secret with this name. Overrides `db.host`, `db.name`, `db.user`, and `db.password`.
    secretName: ""

    # -- Database host
    host: ""
    # -- The database host will be read from this `key` in the specified Secret, when `db.secretName` is set.
    hostSecretKeyName: "host"

    # -- Database name
    name: reportsdb
    # -- The database name will be read from this `key` in the specified Secret, when `db.secretName` is set.
    dbNameSecretKeyName: "dbname"

    # -- Database user
    user: postgres

    # -- The database username will be read from this `key` in the specified Secret, when `db.secretName` is set.
    userSecretKeyName: "username"

    # -- Database password
    password: reports

    # -- The database password will be read from this `key` in the specified Secret, when `db.secretName` is set.
    passwordSecretKeyName: "password"

    # -- Database SSL
    sslmode: disable

    # -- Database SSL root cert
    sslrootcert: ""

    # -- Database SSL key
    sslkey: ""

    # -- Database SSL cert
    sslcert: ""
