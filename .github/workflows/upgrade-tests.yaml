name: Upgrade Tests

permissions: {}

on:
  workflow_dispatch: {}
  pull_request:
    branches:
      - "main"

  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  required:
    strategy:
      fail-fast: false
      matrix:
        k8s-version:
          - name: v1.28
            version: v1.28.15
          - name: v1.29
            version: v1.29.12
          - name: v1.30
            version: v1.30.8
          - name: v1.31
            version: v1.31.4
        tests:
          - ^reports$
    runs-on: ubuntu-latest
    name: ${{ matrix.k8s-version.name }} - ${{ matrix.tests }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Checkout kyverno/kyverno
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: kyverno/kyverno
          path: kyverno
      - name: Setup Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version: ~1.22.2
      - name: Install helm
        id: helm
        uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 # v3.5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Tools
        run: |
          set -e
          curl -LO "https://dl.k8s.io/release/${{ matrix.k8s-version.version }}/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      - name: Install kind
        shell: bash
        run: |
          set -e
          # For AMD64 / x86_64
          [ $(uname -m) = x86_64 ] && curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          # For ARM64
          [ $(uname -m) = aarch64 ] && curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-arm64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind
      - name: Create kind cluster
        run: |
          set -e
          kind create cluster --image kindest/node:${{ matrix.k8s-version.version }} --config ./.github/kind.yml
      - name: Install report server
        run: |
          set -e
          export HELM=${{ steps.helm.outputs.helm-path }}
          helm repo add reports-server https://kyverno.github.io/reports-server
          helm repo update
          helm install reports-server -n reports-server reports-server/reports-server --create-namespace
      - name: Wait for report server ready
        run: |
          set -e
          kubectl wait --namespace reports-server --for=condition=ready pod --selector '!job-name' --timeout=120s
      - name: Install latest kyverno
        run: |
          set -e
          set -e
          rm ./kyverno/charts/kyverno/templates/validate.yaml # until validation for crd is removed
          export HELM=${{ steps.helm.outputs.helm-path }}
          helm repo add kyverno https://kyverno.github.io/kyverno/
          helm install kyverno -n kyverno --create-namespace kyverno/kyverno --values ./testdata/values.yaml
      - name: Wait for kyverno ready
        run: |
          set -e
          kubectl wait --namespace kyverno --for=condition=ready pod --selector '!job-name' --timeout=120s
      - name: Apply test data
        run: |
          set -e
          kubectl apply -f ./testdata/report-1.yaml
          kubectl apply -f ./testdata/report-2.yaml
          kubectl get polr test-1 test-2
      - name: Upgrade report server
        run: |
          set -e
          export HELM=${{ steps.helm.outputs.helm-path }}
          make kind-install
      - name: Apply more test data
        run: |
          set -e
          kubectl apply -f ./testdata/report-3.yaml
          kubectl apply -f ./testdata/report-4.yaml
          kubectl get polr test-3 test-4
      - name: Debug failure
        if: failure()
        uses: ./.github/actions/failure-logs
